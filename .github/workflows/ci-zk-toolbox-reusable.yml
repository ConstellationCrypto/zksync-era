name: Workflow template for CI jobs for Core Components
on:
  workflow_call:
    secrets:
      DOCKERHUB_USER:
        description: "DOCKERHUB_USER"
        required: true
      DOCKERHUB_TOKEN:
        description: "DOCKERHUB_TOKEN"
        required: true

env:
  CLICOLOR: 1

jobs:
  lint:
    name: lint
    uses: ./.github/workflows/ci-core-lint-reusable.yml
    secrets:
      DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  build:
    runs-on: [matterlabs-ci-runner]

    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: Setup environment
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH
          echo IN_DOCKER=1 >> .env
          docker login -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Start services
        run: |
          ci_localnet_up
          ci_run sccache --start-server

      - name: Build
        run: |
          ci_run bash -c "cd zk_toolbox && cargo build --release"

      # Compress with tar to avoid permission loss
      # https://github.com/actions/upload-artifact?tab=readme-ov-file#permission-loss
      - name: Tar zk_toolbox binaries
        run: |
          tar -C ./zk_toolbox/target/release -cvf zk_toolbox.tar zk_inception zk_supervisor

      - name: Upload zk_toolbox binaries
        uses: actions/upload-artifact@v4
        with:
          name: zk_toolbox
          path: zk_toolbox.tar
          compression-level: 0

  tests:
    runs-on: [matterlabs-ci-runner]
    needs: [build]

    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: Download zk_toolbox binaries
        uses: actions/download-artifact@v4
        with:
          name: zk_toolbox
          path: .

      - name: Extract zk_toolbox binaries
        run: |
          tar -xvf zk_toolbox.tar -C ./bin

      - name: Setup environment
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH
          echo IN_DOCKER=1 >> .env
          docker login -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Start services
        run: |
          ci_localnet_up
          ci_run sccache --start-server

      - name: Initialize ecosystem
        run: |
          ci_run git config --global --add safe.directory /usr/src/zksync
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts/system-contracts
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts
          
          ci_run zk_inception ecosystem init --deploy-paymaster --deploy-erc20 \
          --deploy-ecosystem --l1-rpc-url=http://reth:8545 \
          --server-db-url=postgres://postgres:notsecurepassword@postgres:5432 \
          --server-db-name=zksync_server_localhost_era \
          --prover-db-url=postgres://postgres:notsecurepassword@postgres:5432 \
          --prover-db-name=zksync_prover_localhost_era \
          --ignore-prerequisites --verbose

      - name: Create and initialize Rollup chain
        run: |
          ci_run zk_inception chain create \
          --chain-name chain_rollup \
          --chain-id sequential \
          --prover-mode no-proofs \
          --wallet-creation localhost \
          --l1-batch-commit-data-generator-mode rollup \
          --base-token-address 0x0000000000000000000000000000000000000001 \
          --base-token-price-nominator 1 \
          --base-token-price-denominator 1 \
          --set-as-default false \
          --ignore-prerequisites

          ci_run zk_inception chain init \
          --deploy-paymaster \
          --l1-rpc-url=http://reth:8545 \
          --server-db-url=postgres://postgres:notsecurepassword@postgres:5432 \
          --server-db-name=zksync_server_localhost_rollup \
          --prover-db-url=postgres://postgres:notsecurepassword@postgres:5432 \
          --prover-db-name=zksync_prover_localhost_rollup \
          --chain chain_rollup

      - name: Init external node (Rollup)
        run: |
          ci_run zk_inception external-node configs --db-url=postgres://postgres:notsecurepassword@postgres:5432 \
          --db-name=zksync_en_localhost_era --l1-rpc-url=http://reth:8545 --chain chain_rollup
          ci_run zk_inception external-node init --ignore-prerequisites --chain chain_rollup

      - name: Create and initialize Validium chain
        run: |
          ci_run zk_inception chain create \
          --chain-name chain_validium \
          --chain-id sequential \
          --prover-mode no-proofs \
          --wallet-creation localhost \
          --l1-batch-commit-data-generator-mode validium \
          --base-token-address 0x0000000000000000000000000000000000000001 \
          --base-token-price-nominator 1 \
          --base-token-price-denominator 1 \
          --set-as-default false \
          --ignore-prerequisites

          ci_run zk_inception chain init \
          --deploy-paymaster \
          --l1-rpc-url=http://reth:8545 \
          --server-db-url=postgres://postgres:notsecurepassword@postgres:5432 \
          --server-db-name=zksync_server_localhost_validium \
          --prover-db-url=postgres://postgres:notsecurepassword@postgres:5432 \
          --prover-db-name=zksync_prover_localhost_validium \
          --port-offset 2000 \
          --chain chain_validium
  
      - name: Init external node (Validium)
        run: |
          ci_run zk_inception external-node configs --db-url=postgres://postgres:notsecurepassword@postgres:5432 \
          --db-name=zksync_en_localhost_era --l1-rpc-url=http://reth:8545 --chain chain_validium
          ci_run zk_inception external-node init --ignore-prerequisites --chain chain_validium

      - name: Run tests on all chains
        run: |
          ci_run zk_supervisor test all --chain chain_rollup &>rollup.log &
          PID1=$!

          ci_run zk_supervisor test all --chain chain_validium &>validium.log &
          PID2=$!
  
          wait $PID1
          wait $PID2
            
      - name: Show rollup.log logs
        if: always()
        run: ci_run cat rollup.log || true

      - name: Show validium.log logs
        if: always()
        run: ci_run cat validium.log || true

      - name: Show revert.log logs
        if: always()
        run: ci_run cat ./core/tests/revert-test/revert.log || true
